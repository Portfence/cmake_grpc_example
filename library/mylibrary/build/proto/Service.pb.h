// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Service.proto

#ifndef PROTOBUF_INCLUDED_Service_2eproto
#define PROTOBUF_INCLUDED_Service_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Service_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Service_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Service_2eproto();
namespace Utilities {
class CheckTemperatureRequest;
class CheckTemperatureRequestDefaultTypeInternal;
extern CheckTemperatureRequestDefaultTypeInternal _CheckTemperatureRequest_default_instance_;
class CheckTemperatureResponse;
class CheckTemperatureResponseDefaultTypeInternal;
extern CheckTemperatureResponseDefaultTypeInternal _CheckTemperatureResponse_default_instance_;
class CheckUptimeRequest;
class CheckUptimeRequestDefaultTypeInternal;
extern CheckUptimeRequestDefaultTypeInternal _CheckUptimeRequest_default_instance_;
class CheckUptimeResponse;
class CheckUptimeResponseDefaultTypeInternal;
extern CheckUptimeResponseDefaultTypeInternal _CheckUptimeResponse_default_instance_;
}  // namespace Utilities
namespace google {
namespace protobuf {
template<> ::Utilities::CheckTemperatureRequest* Arena::CreateMaybeMessage<::Utilities::CheckTemperatureRequest>(Arena*);
template<> ::Utilities::CheckTemperatureResponse* Arena::CreateMaybeMessage<::Utilities::CheckTemperatureResponse>(Arena*);
template<> ::Utilities::CheckUptimeRequest* Arena::CreateMaybeMessage<::Utilities::CheckUptimeRequest>(Arena*);
template<> ::Utilities::CheckUptimeResponse* Arena::CreateMaybeMessage<::Utilities::CheckUptimeResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Utilities {

// ===================================================================

class CheckUptimeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Utilities.CheckUptimeRequest) */ {
 public:
  CheckUptimeRequest();
  virtual ~CheckUptimeRequest();

  CheckUptimeRequest(const CheckUptimeRequest& from);

  inline CheckUptimeRequest& operator=(const CheckUptimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUptimeRequest(CheckUptimeRequest&& from) noexcept
    : CheckUptimeRequest() {
    *this = ::std::move(from);
  }

  inline CheckUptimeRequest& operator=(CheckUptimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckUptimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckUptimeRequest* internal_default_instance() {
    return reinterpret_cast<const CheckUptimeRequest*>(
               &_CheckUptimeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CheckUptimeRequest* other);
  friend void swap(CheckUptimeRequest& a, CheckUptimeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUptimeRequest* New() const final {
    return CreateMaybeMessage<CheckUptimeRequest>(nullptr);
  }

  CheckUptimeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckUptimeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckUptimeRequest& from);
  void MergeFrom(const CheckUptimeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckUptimeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Utilities.CheckUptimeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class CheckUptimeResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Utilities.CheckUptimeResponse) */ {
 public:
  CheckUptimeResponse();
  virtual ~CheckUptimeResponse();

  CheckUptimeResponse(const CheckUptimeResponse& from);

  inline CheckUptimeResponse& operator=(const CheckUptimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckUptimeResponse(CheckUptimeResponse&& from) noexcept
    : CheckUptimeResponse() {
    *this = ::std::move(from);
  }

  inline CheckUptimeResponse& operator=(CheckUptimeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckUptimeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckUptimeResponse* internal_default_instance() {
    return reinterpret_cast<const CheckUptimeResponse*>(
               &_CheckUptimeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CheckUptimeResponse* other);
  friend void swap(CheckUptimeResponse& a, CheckUptimeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckUptimeResponse* New() const final {
    return CreateMaybeMessage<CheckUptimeResponse>(nullptr);
  }

  CheckUptimeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckUptimeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckUptimeResponse& from);
  void MergeFrom(const CheckUptimeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckUptimeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uptime = 1;
  void clear_uptime();
  static const int kUptimeFieldNumber = 1;
  const ::std::string& uptime() const;
  void set_uptime(const ::std::string& value);
  #if LANG_CXX11
  void set_uptime(::std::string&& value);
  #endif
  void set_uptime(const char* value);
  void set_uptime(const char* value, size_t size);
  ::std::string* mutable_uptime();
  ::std::string* release_uptime();
  void set_allocated_uptime(::std::string* uptime);

  // @@protoc_insertion_point(class_scope:Utilities.CheckUptimeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uptime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class CheckTemperatureRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Utilities.CheckTemperatureRequest) */ {
 public:
  CheckTemperatureRequest();
  virtual ~CheckTemperatureRequest();

  CheckTemperatureRequest(const CheckTemperatureRequest& from);

  inline CheckTemperatureRequest& operator=(const CheckTemperatureRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckTemperatureRequest(CheckTemperatureRequest&& from) noexcept
    : CheckTemperatureRequest() {
    *this = ::std::move(from);
  }

  inline CheckTemperatureRequest& operator=(CheckTemperatureRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckTemperatureRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckTemperatureRequest* internal_default_instance() {
    return reinterpret_cast<const CheckTemperatureRequest*>(
               &_CheckTemperatureRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CheckTemperatureRequest* other);
  friend void swap(CheckTemperatureRequest& a, CheckTemperatureRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckTemperatureRequest* New() const final {
    return CreateMaybeMessage<CheckTemperatureRequest>(nullptr);
  }

  CheckTemperatureRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckTemperatureRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckTemperatureRequest& from);
  void MergeFrom(const CheckTemperatureRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckTemperatureRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Utilities.CheckTemperatureRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Service_2eproto;
};
// -------------------------------------------------------------------

class CheckTemperatureResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Utilities.CheckTemperatureResponse) */ {
 public:
  CheckTemperatureResponse();
  virtual ~CheckTemperatureResponse();

  CheckTemperatureResponse(const CheckTemperatureResponse& from);

  inline CheckTemperatureResponse& operator=(const CheckTemperatureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckTemperatureResponse(CheckTemperatureResponse&& from) noexcept
    : CheckTemperatureResponse() {
    *this = ::std::move(from);
  }

  inline CheckTemperatureResponse& operator=(CheckTemperatureResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CheckTemperatureResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckTemperatureResponse* internal_default_instance() {
    return reinterpret_cast<const CheckTemperatureResponse*>(
               &_CheckTemperatureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CheckTemperatureResponse* other);
  friend void swap(CheckTemperatureResponse& a, CheckTemperatureResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckTemperatureResponse* New() const final {
    return CreateMaybeMessage<CheckTemperatureResponse>(nullptr);
  }

  CheckTemperatureResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckTemperatureResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckTemperatureResponse& from);
  void MergeFrom(const CheckTemperatureResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckTemperatureResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double temperature = 1;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 1;
  double temperature() const;
  void set_temperature(double value);

  // @@protoc_insertion_point(class_scope:Utilities.CheckTemperatureResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double temperature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Service_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CheckUptimeRequest

// string name = 1;
inline void CheckUptimeRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckUptimeRequest::name() const {
  // @@protoc_insertion_point(field_get:Utilities.CheckUptimeRequest.name)
  return name_.GetNoArena();
}
inline void CheckUptimeRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Utilities.CheckUptimeRequest.name)
}
#if LANG_CXX11
inline void CheckUptimeRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Utilities.CheckUptimeRequest.name)
}
#endif
inline void CheckUptimeRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Utilities.CheckUptimeRequest.name)
}
inline void CheckUptimeRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Utilities.CheckUptimeRequest.name)
}
inline ::std::string* CheckUptimeRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Utilities.CheckUptimeRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckUptimeRequest::release_name() {
  // @@protoc_insertion_point(field_release:Utilities.CheckUptimeRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUptimeRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Utilities.CheckUptimeRequest.name)
}

// int32 id = 2;
inline void CheckUptimeRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CheckUptimeRequest::id() const {
  // @@protoc_insertion_point(field_get:Utilities.CheckUptimeRequest.id)
  return id_;
}
inline void CheckUptimeRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Utilities.CheckUptimeRequest.id)
}

// -------------------------------------------------------------------

// CheckUptimeResponse

// string uptime = 1;
inline void CheckUptimeResponse::clear_uptime() {
  uptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckUptimeResponse::uptime() const {
  // @@protoc_insertion_point(field_get:Utilities.CheckUptimeResponse.uptime)
  return uptime_.GetNoArena();
}
inline void CheckUptimeResponse::set_uptime(const ::std::string& value) {
  
  uptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Utilities.CheckUptimeResponse.uptime)
}
#if LANG_CXX11
inline void CheckUptimeResponse::set_uptime(::std::string&& value) {
  
  uptime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Utilities.CheckUptimeResponse.uptime)
}
#endif
inline void CheckUptimeResponse::set_uptime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  uptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Utilities.CheckUptimeResponse.uptime)
}
inline void CheckUptimeResponse::set_uptime(const char* value, size_t size) {
  
  uptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Utilities.CheckUptimeResponse.uptime)
}
inline ::std::string* CheckUptimeResponse::mutable_uptime() {
  
  // @@protoc_insertion_point(field_mutable:Utilities.CheckUptimeResponse.uptime)
  return uptime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckUptimeResponse::release_uptime() {
  // @@protoc_insertion_point(field_release:Utilities.CheckUptimeResponse.uptime)
  
  return uptime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckUptimeResponse::set_allocated_uptime(::std::string* uptime) {
  if (uptime != nullptr) {
    
  } else {
    
  }
  uptime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uptime);
  // @@protoc_insertion_point(field_set_allocated:Utilities.CheckUptimeResponse.uptime)
}

// -------------------------------------------------------------------

// CheckTemperatureRequest

// int32 id = 1;
inline void CheckTemperatureRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CheckTemperatureRequest::id() const {
  // @@protoc_insertion_point(field_get:Utilities.CheckTemperatureRequest.id)
  return id_;
}
inline void CheckTemperatureRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Utilities.CheckTemperatureRequest.id)
}

// -------------------------------------------------------------------

// CheckTemperatureResponse

// double temperature = 1;
inline void CheckTemperatureResponse::clear_temperature() {
  temperature_ = 0;
}
inline double CheckTemperatureResponse::temperature() const {
  // @@protoc_insertion_point(field_get:Utilities.CheckTemperatureResponse.temperature)
  return temperature_;
}
inline void CheckTemperatureResponse::set_temperature(double value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:Utilities.CheckTemperatureResponse.temperature)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Utilities

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Service_2eproto
