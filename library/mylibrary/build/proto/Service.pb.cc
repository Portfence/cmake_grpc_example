// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Service.proto

#include "Service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace Utilities {
class CheckUptimeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckUptimeRequest> _instance;
} _CheckUptimeRequest_default_instance_;
class CheckUptimeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckUptimeResponse> _instance;
} _CheckUptimeResponse_default_instance_;
class CheckTemperatureRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckTemperatureRequest> _instance;
} _CheckTemperatureRequest_default_instance_;
class CheckTemperatureResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckTemperatureResponse> _instance;
} _CheckTemperatureResponse_default_instance_;
}  // namespace Utilities
static void InitDefaultsCheckUptimeRequest_Service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Utilities::_CheckUptimeRequest_default_instance_;
    new (ptr) ::Utilities::CheckUptimeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Utilities::CheckUptimeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckUptimeRequest_Service_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckUptimeRequest_Service_2eproto}, {}};

static void InitDefaultsCheckUptimeResponse_Service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Utilities::_CheckUptimeResponse_default_instance_;
    new (ptr) ::Utilities::CheckUptimeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Utilities::CheckUptimeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckUptimeResponse_Service_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckUptimeResponse_Service_2eproto}, {}};

static void InitDefaultsCheckTemperatureRequest_Service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Utilities::_CheckTemperatureRequest_default_instance_;
    new (ptr) ::Utilities::CheckTemperatureRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Utilities::CheckTemperatureRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckTemperatureRequest_Service_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckTemperatureRequest_Service_2eproto}, {}};

static void InitDefaultsCheckTemperatureResponse_Service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Utilities::_CheckTemperatureResponse_default_instance_;
    new (ptr) ::Utilities::CheckTemperatureResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Utilities::CheckTemperatureResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckTemperatureResponse_Service_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckTemperatureResponse_Service_2eproto}, {}};

void InitDefaults_Service_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CheckUptimeRequest_Service_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckUptimeResponse_Service_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckTemperatureRequest_Service_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckTemperatureResponse_Service_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Service_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_Service_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Service_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Service_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckUptimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckUptimeRequest, name_),
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckUptimeRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckUptimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckUptimeResponse, uptime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckTemperatureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckTemperatureRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckTemperatureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Utilities::CheckTemperatureResponse, temperature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Utilities::CheckUptimeRequest)},
  { 7, -1, sizeof(::Utilities::CheckUptimeResponse)},
  { 13, -1, sizeof(::Utilities::CheckTemperatureRequest)},
  { 19, -1, sizeof(::Utilities::CheckTemperatureResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Utilities::_CheckUptimeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Utilities::_CheckUptimeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Utilities::_CheckTemperatureRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Utilities::_CheckTemperatureResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Service_2eproto = {
  {}, AddDescriptors_Service_2eproto, "Service.proto", schemas,
  file_default_instances, TableStruct_Service_2eproto::offsets,
  file_level_metadata_Service_2eproto, 4, file_level_enum_descriptors_Service_2eproto, file_level_service_descriptors_Service_2eproto,
};

const char descriptor_table_protodef_Service_2eproto[] =
  "\n\rService.proto\022\tUtilities\".\n\022CheckUptim"
  "eRequest\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\"%\n\023Ch"
  "eckUptimeResponse\022\016\n\006uptime\030\001 \001(\t\"%\n\027Che"
  "ckTemperatureRequest\022\n\n\002id\030\001 \001(\005\"/\n\030Chec"
  "kTemperatureResponse\022\023\n\013temperature\030\001 \001("
  "\0012\273\001\n\nConnection\022N\n\013CheckUptime\022\035.Utilit"
  "ies.CheckUptimeRequest\032\036.Utilities.Check"
  "UptimeResponse\"\000\022]\n\020CheckTemperature\022\".U"
  "tilities.CheckTemperatureRequest\032#.Utili"
  "ties.CheckTemperatureResponse\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_Service_2eproto = {
  false, InitDefaults_Service_2eproto, 
  descriptor_table_protodef_Service_2eproto,
  "Service.proto", &assign_descriptors_table_Service_2eproto, 399,
};

void AddDescriptors_Service_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Service_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Service_2eproto = []() { AddDescriptors_Service_2eproto(); return true; }();
namespace Utilities {

// ===================================================================

void CheckUptimeRequest::InitAsDefaultInstance() {
}
class CheckUptimeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUptimeRequest::kNameFieldNumber;
const int CheckUptimeRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUptimeRequest::CheckUptimeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Utilities.CheckUptimeRequest)
}
CheckUptimeRequest::CheckUptimeRequest(const CheckUptimeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Utilities.CheckUptimeRequest)
}

void CheckUptimeRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CheckUptimeRequest_Service_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

CheckUptimeRequest::~CheckUptimeRequest() {
  // @@protoc_insertion_point(destructor:Utilities.CheckUptimeRequest)
  SharedDtor();
}

void CheckUptimeRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckUptimeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckUptimeRequest& CheckUptimeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CheckUptimeRequest_Service_2eproto.base);
  return *internal_default_instance();
}


void CheckUptimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Utilities.CheckUptimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CheckUptimeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CheckUptimeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Utilities.CheckUptimeRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CheckUptimeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Utilities.CheckUptimeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Utilities.CheckUptimeRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Utilities.CheckUptimeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Utilities.CheckUptimeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CheckUptimeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Utilities.CheckUptimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Utilities.CheckUptimeRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Utilities.CheckUptimeRequest)
}

::google::protobuf::uint8* CheckUptimeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Utilities.CheckUptimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Utilities.CheckUptimeRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Utilities.CheckUptimeRequest)
  return target;
}

size_t CheckUptimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Utilities.CheckUptimeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckUptimeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Utilities.CheckUptimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUptimeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CheckUptimeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Utilities.CheckUptimeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Utilities.CheckUptimeRequest)
    MergeFrom(*source);
  }
}

void CheckUptimeRequest::MergeFrom(const CheckUptimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Utilities.CheckUptimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CheckUptimeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Utilities.CheckUptimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUptimeRequest::CopyFrom(const CheckUptimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Utilities.CheckUptimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUptimeRequest::IsInitialized() const {
  return true;
}

void CheckUptimeRequest::Swap(CheckUptimeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUptimeRequest::InternalSwap(CheckUptimeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

::google::protobuf::Metadata CheckUptimeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Service_2eproto);
  return ::file_level_metadata_Service_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CheckUptimeResponse::InitAsDefaultInstance() {
}
class CheckUptimeResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUptimeResponse::kUptimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUptimeResponse::CheckUptimeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Utilities.CheckUptimeResponse)
}
CheckUptimeResponse::CheckUptimeResponse(const CheckUptimeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uptime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uptime().size() > 0) {
    uptime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uptime_);
  }
  // @@protoc_insertion_point(copy_constructor:Utilities.CheckUptimeResponse)
}

void CheckUptimeResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CheckUptimeResponse_Service_2eproto.base);
  uptime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CheckUptimeResponse::~CheckUptimeResponse() {
  // @@protoc_insertion_point(destructor:Utilities.CheckUptimeResponse)
  SharedDtor();
}

void CheckUptimeResponse::SharedDtor() {
  uptime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckUptimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckUptimeResponse& CheckUptimeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CheckUptimeResponse_Service_2eproto.base);
  return *internal_default_instance();
}


void CheckUptimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Utilities.CheckUptimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CheckUptimeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CheckUptimeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string uptime = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Utilities.CheckUptimeResponse.uptime");
        object = msg->mutable_uptime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CheckUptimeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Utilities.CheckUptimeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uptime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uptime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uptime().data(), static_cast<int>(this->uptime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Utilities.CheckUptimeResponse.uptime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Utilities.CheckUptimeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Utilities.CheckUptimeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CheckUptimeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Utilities.CheckUptimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uptime = 1;
  if (this->uptime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uptime().data(), static_cast<int>(this->uptime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Utilities.CheckUptimeResponse.uptime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uptime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Utilities.CheckUptimeResponse)
}

::google::protobuf::uint8* CheckUptimeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Utilities.CheckUptimeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uptime = 1;
  if (this->uptime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uptime().data(), static_cast<int>(this->uptime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Utilities.CheckUptimeResponse.uptime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uptime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Utilities.CheckUptimeResponse)
  return target;
}

size_t CheckUptimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Utilities.CheckUptimeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uptime = 1;
  if (this->uptime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uptime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckUptimeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Utilities.CheckUptimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUptimeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CheckUptimeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Utilities.CheckUptimeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Utilities.CheckUptimeResponse)
    MergeFrom(*source);
  }
}

void CheckUptimeResponse::MergeFrom(const CheckUptimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Utilities.CheckUptimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uptime().size() > 0) {

    uptime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uptime_);
  }
}

void CheckUptimeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Utilities.CheckUptimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUptimeResponse::CopyFrom(const CheckUptimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Utilities.CheckUptimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUptimeResponse::IsInitialized() const {
  return true;
}

void CheckUptimeResponse::Swap(CheckUptimeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUptimeResponse::InternalSwap(CheckUptimeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uptime_.Swap(&other->uptime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CheckUptimeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Service_2eproto);
  return ::file_level_metadata_Service_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CheckTemperatureRequest::InitAsDefaultInstance() {
}
class CheckTemperatureRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckTemperatureRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckTemperatureRequest::CheckTemperatureRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Utilities.CheckTemperatureRequest)
}
CheckTemperatureRequest::CheckTemperatureRequest(const CheckTemperatureRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Utilities.CheckTemperatureRequest)
}

void CheckTemperatureRequest::SharedCtor() {
  id_ = 0;
}

CheckTemperatureRequest::~CheckTemperatureRequest() {
  // @@protoc_insertion_point(destructor:Utilities.CheckTemperatureRequest)
  SharedDtor();
}

void CheckTemperatureRequest::SharedDtor() {
}

void CheckTemperatureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckTemperatureRequest& CheckTemperatureRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CheckTemperatureRequest_Service_2eproto.base);
  return *internal_default_instance();
}


void CheckTemperatureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Utilities.CheckTemperatureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CheckTemperatureRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CheckTemperatureRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CheckTemperatureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Utilities.CheckTemperatureRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Utilities.CheckTemperatureRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Utilities.CheckTemperatureRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CheckTemperatureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Utilities.CheckTemperatureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Utilities.CheckTemperatureRequest)
}

::google::protobuf::uint8* CheckTemperatureRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Utilities.CheckTemperatureRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Utilities.CheckTemperatureRequest)
  return target;
}

size_t CheckTemperatureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Utilities.CheckTemperatureRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckTemperatureRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Utilities.CheckTemperatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckTemperatureRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CheckTemperatureRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Utilities.CheckTemperatureRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Utilities.CheckTemperatureRequest)
    MergeFrom(*source);
  }
}

void CheckTemperatureRequest::MergeFrom(const CheckTemperatureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Utilities.CheckTemperatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CheckTemperatureRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Utilities.CheckTemperatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckTemperatureRequest::CopyFrom(const CheckTemperatureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Utilities.CheckTemperatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckTemperatureRequest::IsInitialized() const {
  return true;
}

void CheckTemperatureRequest::Swap(CheckTemperatureRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckTemperatureRequest::InternalSwap(CheckTemperatureRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata CheckTemperatureRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Service_2eproto);
  return ::file_level_metadata_Service_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CheckTemperatureResponse::InitAsDefaultInstance() {
}
class CheckTemperatureResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckTemperatureResponse::kTemperatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckTemperatureResponse::CheckTemperatureResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Utilities.CheckTemperatureResponse)
}
CheckTemperatureResponse::CheckTemperatureResponse(const CheckTemperatureResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  temperature_ = from.temperature_;
  // @@protoc_insertion_point(copy_constructor:Utilities.CheckTemperatureResponse)
}

void CheckTemperatureResponse::SharedCtor() {
  temperature_ = 0;
}

CheckTemperatureResponse::~CheckTemperatureResponse() {
  // @@protoc_insertion_point(destructor:Utilities.CheckTemperatureResponse)
  SharedDtor();
}

void CheckTemperatureResponse::SharedDtor() {
}

void CheckTemperatureResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckTemperatureResponse& CheckTemperatureResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CheckTemperatureResponse_Service_2eproto.base);
  return *internal_default_instance();
}


void CheckTemperatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Utilities.CheckTemperatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temperature_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CheckTemperatureResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CheckTemperatureResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double temperature = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_temperature(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CheckTemperatureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Utilities.CheckTemperatureResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double temperature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Utilities.CheckTemperatureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Utilities.CheckTemperatureResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CheckTemperatureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Utilities.CheckTemperatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double temperature = 1;
  if (this->temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->temperature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Utilities.CheckTemperatureResponse)
}

::google::protobuf::uint8* CheckTemperatureResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Utilities.CheckTemperatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double temperature = 1;
  if (this->temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->temperature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Utilities.CheckTemperatureResponse)
  return target;
}

size_t CheckTemperatureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Utilities.CheckTemperatureResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double temperature = 1;
  if (this->temperature() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckTemperatureResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Utilities.CheckTemperatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckTemperatureResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CheckTemperatureResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Utilities.CheckTemperatureResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Utilities.CheckTemperatureResponse)
    MergeFrom(*source);
  }
}

void CheckTemperatureResponse::MergeFrom(const CheckTemperatureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Utilities.CheckTemperatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.temperature() != 0) {
    set_temperature(from.temperature());
  }
}

void CheckTemperatureResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Utilities.CheckTemperatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckTemperatureResponse::CopyFrom(const CheckTemperatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Utilities.CheckTemperatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckTemperatureResponse::IsInitialized() const {
  return true;
}

void CheckTemperatureResponse::Swap(CheckTemperatureResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckTemperatureResponse::InternalSwap(CheckTemperatureResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(temperature_, other->temperature_);
}

::google::protobuf::Metadata CheckTemperatureResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Service_2eproto);
  return ::file_level_metadata_Service_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Utilities
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Utilities::CheckUptimeRequest* Arena::CreateMaybeMessage< ::Utilities::CheckUptimeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Utilities::CheckUptimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Utilities::CheckUptimeResponse* Arena::CreateMaybeMessage< ::Utilities::CheckUptimeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Utilities::CheckUptimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Utilities::CheckTemperatureRequest* Arena::CreateMaybeMessage< ::Utilities::CheckTemperatureRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Utilities::CheckTemperatureRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Utilities::CheckTemperatureResponse* Arena::CreateMaybeMessage< ::Utilities::CheckTemperatureResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Utilities::CheckTemperatureResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
